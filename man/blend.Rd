% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_blend.R
\name{blend}
\alias{blend}
\title{Blend two colors}
\usage{
blend(x, y, mode = "multiply")
}
\arguments{
\item{x, y}{colors specified as hex strings or named R colors.}

\item{mode}{blending mode; valid modes are \code{multiply}, \code{darken}, \code{lighten}, \code{screen}, \code{overlay}, \code{burn}, and \code{dodge}.}
}
\value{
A vector of colors specified as hex codes
}
\description{
Blend two colors using RGB channel-wise blend functions.
}
\details{
All arguments can be vectors, as long as they are of compatible length (shorter arguments will be repeated to the length of longer arguments)
}
\examples{
blend("#4CBBFC", "#EEEE22")
# Arguments can be vectors and all blends are returned
mix("red", c("blue", "darkblue", "lightblue"))

#' Show the effects of the various blend modes
all_blends <- function(x, y) {
  c(x, y,
    "white",
    blend(x, y, mode=c("multiply", "darken", "lighten",
                       "screen", "overlay", "burn", "dodge"))
   )
}
show_col(
  all_blends("#FEF213", "#146EFD"),
  all_blends("#146EFD", "#FEF213"),
  all_blends("#FEF213", "#FA000C"),
  all_blends("#FA000C", "#FEF213"),
  all_blends("#146EFD", "#FA000C"),
  all_blends("#FA000C", "#146EFD")
)
# NB: for some blending modes, the order of the input colors is important
}
\seealso{
Other color manipulation functions: 
\code{\link{average}()},
\code{\link{channel}()},
\code{\link{darken}()},
\code{\link{luminance}()},
\code{\link{mix}()},
\code{\link{saturate}()}
}
\concept{color manipulation functions}
