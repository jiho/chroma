% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_brewer.R
\name{brewer_scale}
\alias{brewer_scale}
\alias{brewer_map}
\alias{brewer_palette}
\alias{brewer_colors}
\title{ColorBrewer scales and palettes}
\usage{
brewer_scale(
  name = "Blues",
  model = "lab",
  interp = "linear",
  domain = c(0, 1),
  reverse = FALSE
)

brewer_map(x, ...)

brewer_palette(name = "Blues", ...)

brewer_colors(n, name = "Blues", ...)
}
\arguments{
\item{name}{name of a ColorBrewer palette. See \code{\link{brewer_info}} for a list of palettes and their characteristics.}

\item{model}{string defining the color model in which to perform the interpolation; valid models are \code{lab} (the default and usually most suitable), \code{hcl}, \code{lch}, \code{hsi}, \code{hsl}, \code{hsv}, \code{rgb}, \code{lrgb}. Beware that all but \code{lab} and \code{(l)rgb} can give surprising results.}

\item{interp}{string defining the type of interpolation to perform; either \code{linear} (the default) or \code{bezier}, which results in a smoother transition between colors. \code{bezier} interpolation is only available with \code{model="lab"} however.}

\item{domain}{vector of two values between which the scale is computed.}

\item{reverse}{whether to reverse the order of colors along the scale.}

\item{x}{a vector whose values will be coerced to numbers and mapped to colors.}

\item{...}{passed to \code{\link{brewer_scale}}. Note that argument \code{domain} is meaningless in functions other than \code{brewer_scale} and passing it through \code{...} is an error.}

\item{n}{number of colors to extract from the color palette.}
}
\value{
\code{*_scale} returns a \strong{function}. This function takes a single argument (\code{x}: a numeric vector), maps its values to colors, and returns thee colors as hex codes.

\code{*_map} is a shortcut for \code{*_scale(domain=range(x))(x)}: it creates a scale that spans the range of values in argument \code{x}, maps the content of \code{x} on that scale, and returns the \strong{colors}.

\code{*_palette} returns a \strong{function}. This function takes an integer (\code{n}) as argument, picks \code{n} colors evenly spaced along the scale, and returns them as hex codes.

\code{*_colors} is a shortcut for \code{*_palette()(n)} and directly returns \code{n} evenly spaced \strong{colors}. It is equivalent to built-in functions such as \code{\link[grDevices]{heat.colors}}, \code{\link[grDevices]{topo.colors}}, etc.

\code{scale_*} return a \strong{ggplot2 scale}, either discrete (similar to \code{\link[ggplot2]{scale_color_discrete}}) or continuous (similar to \code{\link[ggplot2]{scale_color_continuous}}).
}
\description{
ColorBrewer scales and palettes
}
\examples{
# Define a scale function
ygb <- brewer_scale(name="YlGnBu")
ygb(c(0, 0.2, 0.6, 1))

# Define a palette function
bgy_pal <- brewer_palette(name="YlGnBu", reverse=TRUE)
bgy_pal(10)
show_col(bgy_pal(100))

# Show 7 colors from each palette
show_col(lapply(brewer_info$name, function(x) {brewer_colors(n=7, name=x)}))

# Warn about the potentially inappropriate use of many colors
brewer_colors(n=15, name="Blues")
brewer_colors(n=15, name="Pastel1")
brewer_palette(name="Pastel1")(15)
# Some warnings can be avoided by explicitly requiring a palette
# which, by definition, is taken from a *continuous* scale
brewer_palette(name="Blues")(15)
brewer_palette(name="Pastel1")(15)

# Sequential ColorBrewer palettes are good for continuous variables
# such as the elevation of the Maunga Whau volcano
image(maunga, col=brewer_colors(100, name="YlOrBr", reverse=TRUE))
contour(maunga, col=alpha("white", 0.5), add=TRUE)

persp(maunga, theta=50, phi=25, scale=FALSE, expand=2,
      border=alpha("black", 0.4),
      col=brewer_map(persp_facets(maunga$z), "YlOrBr", reverse=TRUE))

\dontrun{
library("rgl")
persp3d(maunga, aspect=c(1,0.7,0.2), axes=FALSE, box=FALSE,
        col=brewer_map(maunga$z, "YlOrBr", reverse=TRUE))

}
# Qualitative palettes are appropriate for discrete variables
attach(iris)
plot(Petal.Length, Sepal.Length, pch=19, col=brewer_map(Species, "Set2"))
legend(1, 8, legend=levels(Species), pch=19,
       col=brewer_colors(n=nlevels(Species), name="Set2"))

}
\references{
\url{http://colorbrewer2.org}
}
\seealso{
\code{\link{brewer}} for the colors in the palettes and \code{\link{brewer_info}} for a list of palettes and their characteristics.

Other color scales and palettes: 
\code{\link{chroma_scale}()},
\code{\link{cubehelix_scale}()},
\code{\link{etopo_scale}()},
\code{\link{hue_scale}()},
\code{\link{inferno_scale}()},
\code{\link{interp_scale}()},
\code{\link{light_scale}()},
\code{\link{magma_scale}()},
\code{\link{plasma_scale}()},
\code{\link{turbo_scale}()},
\code{\link{viridis_scale}()},
\code{\link{wikitopo_scale}()}
}
\concept{color scales and palettes}
