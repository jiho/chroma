% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_vsup.R
\name{vsup_scale}
\alias{vsup_scale}
\alias{vsup_map}
\alias{vsup_palette}
\alias{vsup_colors}
\title{Value suppressing color scale and palette}
\usage{
vsup_scale(
  colors = viridis_colors(6),
  branching = 2,
  layers = 4,
  mode = "hcl",
  domain = c(0, 1),
  uncertainty_domain = c(0, 1),
  reverse = FALSE,
  na.value = "red",
  extrapolate = FALSE
)

vsup_map(x, u, ...)

vsup_palette(u, ...)

vsup_colors(n, u, ...)
}
\arguments{
\item{colors}{vector of colors specified as hex strings or named R colors. By default, those colors will be evenly distributed along the scale and new colors will be interpolated between them.}

\item{domain}{vector of two values between which the scale is computed.}

\item{reverse}{whether to reverse the order of colors along the scale.}

\item{na.value}{value to return for missing values in the input. Can be either a color, \code{NULL} in which case a tentitatively appropriate color will be chosen automatically, or \code{NA}.}

\item{extrapolate}{when \code{FALSE}, the default, return \code{NA} for input values that are out of the domain; when \code{TRUE} return the color corresponding to the extreme of the domain instead.}

\item{x}{a vector whose values will be coerced to numbers and mapped to colors.}

\item{...}{passed to \code{\link{vsup_scale}} from other \code{vsup_*} functions; passed to \code{ggplot2::\link[ggplot2]{continuous_scale}} or \code{ggplot2::\link[ggplot2]{discrete_scale}} from the \code{scale_*} functions, as appropriate. NB: in all situations, passing \code{domain} is meaningless and yields an error.}

\item{n}{number of colors to extract from the color palette.}
}
\value{
\code{*_scale} returns a \strong{function}. This function takes a single argument (\code{x}: a numeric vector), maps its values to colors, and returns thee colors as hex codes.

\code{*_map} is a shortcut for \code{*_scale(domain=range(x))(x)}: it creates a scale that spans the range of values in argument \code{x}, maps the content of \code{x} on that scale, and returns the \strong{colors}.

\code{*_palette} returns a \strong{function}. This function takes an integer (\code{n}) as argument, picks \code{n} colors evenly spaced along the scale, and returns them as hex codes.

\code{*_colors} is a shortcut for \code{*_palette()(n)} and directly returns \code{n} evenly spaced \strong{colors}. It is equivalent to built-in functions such as \code{\link[grDevices]{heat.colors}}, \code{\link[grDevices]{topo.colors}}, etc.

\code{scale_*} return a \strong{ggplot2 scale}, either discrete (similar to \code{\link[ggplot2]{scale_color_discrete}}) or continuous (similar to \code{\link[ggplot2]{scale_color_continuous}}).
}
\description{
Value suppressing color scale, whereby uncertain values are plotted with the
same colour, to prevent the reader from trying to distinguish them.
}
\examples{
# display a range of values with increasing uncertainty
show_col(
  vsup_scale()(1:6/6, 0),
  vsup_scale()(1:6/6, 0.5),
  vsup_scale()(1:6/6, 1)
)

# starting from colours with different hues but similar chroma and luminance
# gives more continuous looking results; for example:
cols <- hue_colors(2, c=0.8, l=0.5)
show_col(cols)
# display a grid of colours corresponding to various values and uncertainties
g <- expand.grid(x=1:10, u=1:10)
plot(x ~ u, data=g, col=vsup_map(g$x, g$u, cols), pch=19, asp=1, cex=6)
# increase the number of steps (i.e. layers) in the uncertainty mapping,
# to get a smoother visual aspect
plot(x ~ u, data=g, col=vsup_map(g$x, g$u, colors=cols, layers=10, mode="hcl"), pch=19, asp=1, cex=6)
# and vary to modes to check their effect
plot(x ~ u, data=g, col=vsup_map(g$x, g$u, colors=cols, layers=10, mode="hc" ), pch=19, asp=1, cex=6)
plot(x ~ u, data=g, col=vsup_map(g$x, g$u, colors=cols, layers=10, mode="hl" ), pch=19, asp=1, cex=6)

vsup_palette(colors=cols)(10, u=0)
show_col(
  vsup_colors(10, 0   , layers=10, mode="hc"),
  vsup_colors(10, 0.25, layers=10, mode="hc"),
  vsup_colors(10, 0.5 , layers=10, mode="hc"),
  vsup_colors(10, 0.75, layers=10, mode="hc"),
  vsup_colors(10, 1   , layers=10, mode="hc")
)
}
\seealso{
The \code{\link{hcl}} function, on which this one is based.

Other HCL-based scales: 
\code{\link{chroma_scale}()},
\code{\link{hue_scale}()},
\code{\link{light_scale}()}

Other color scales and palettes: 
\code{\link{brewer_scale}()},
\code{\link{chroma_scale}()},
\code{\link{cubehelix_scale}()},
\code{\link{etopo_scale}()},
\code{\link{hue_scale}()},
\code{\link{inferno_scale}()},
\code{\link{interp_scale}()},
\code{\link{light_scale}()},
\code{\link{magma_scale}()},
\code{\link{plasma_scale}()},
\code{\link{turbo_scale}()},
\code{\link{viridis_scale}()},
\code{\link{wikitopo_scale}()}
}
\concept{HCL-based scales}
\concept{color scales and palettes}
